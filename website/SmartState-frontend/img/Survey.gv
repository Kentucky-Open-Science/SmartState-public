// Code generated by Umple 1.32.1.6535.66c005ced

digraph "model" {
  compound = true;

  // Class: SurveyBase

    // Top and Bottom Level StateMachine: state
    
    // Start states are shown as a black circle
    node [ratio="auto" shape = point, fillcolor="black", width=0.2 ];
    start_SurveyBase_state [ tooltip = "Class SurveyBase, SM state, State start" ];
    
        
    // Format for normal states
    node [ratio="auto" shape = rectangle, width=1,style=rounded];
    
      // State: initial

      SurveyBase_state_initial [label = initial, tooltip = "Class SurveyBase, SM state, State initial&#13;Entry:
   stateNotify(&quot;initial&quot;);"];
      // End State: initial

      // State: noonSurvey

      SurveyBase_state_noonSurvey [label = noonSurvey, tooltip = "Class SurveyBase, SM state, State noonSurvey&#13;Entry:
   stateNotify(&quot;noonSurvey&quot;);"];
      // End State: noonSurvey

      // State: waitFor6pm

      SurveyBase_state_waitFor6pm [label = waitFor6pm, tooltip = "Class SurveyBase, SM state, State waitFor6pm&#13;Entry:
   stateNotify(&quot;waitFor6pm&quot;);"];
      // End State: waitFor6pm

      // State: survey6pm

      SurveyBase_state_survey6pm [label = survey6pm, tooltip = "Class SurveyBase, SM state, State survey6pm&#13;Entry:
   stateNotify(&quot;survey6pm&quot;);"];
      // End State: survey6pm

      // State: waitForNoon

      SurveyBase_state_waitForNoon [label = waitForNoon, tooltip = "Class SurveyBase, SM state, State waitForNoon&#13;Entry:
   stateNotify(&quot;waitForNoon&quot;);"];
      // End State: waitForNoon

      // State: endSurveyProtocol

      SurveyBase_state_endSurveyProtocol [label = endSurveyProtocol, tooltip = "Class SurveyBase, SM state, State endSurveyProtocol&#13;Entry:
   stateNotify(&quot;endSurveyProtocol&quot;);"];
      // End State: endSurveyProtocol
    // End Top and Bottom Level StateMachine: state

  // All transitions
    start_SurveyBase_state -> SurveyBase_state_initial [  tooltip = "start to initial" ] ;
    SurveyBase_state_waitForNoon -> SurveyBase_state_noonSurvey [  label = "after(deadlineNoon)", tooltip = "From waitForNoon to noonSurvey after(deadlineNoon)" ] ;
  
  SurveyBase_state_initial -> SurveyBase_state_waitFor6pm [  label = "isBefore6pm", tooltip = "From initial to waitFor6pm on isBefore6pm" ] ;
  
  SurveyBase_state_noonSurvey -> SurveyBase_state_waitFor6pm [  tooltip = "From noonSurvey to waitFor6pm automatically" ] ;
  
  SurveyBase_state_waitFor6pm -> SurveyBase_state_survey6pm [  label = "after(deadline6pm)", tooltip = "From waitFor6pm to survey6pm after(deadline6pm)" ] ;
  
  SurveyBase_state_initial -> SurveyBase_state_waitForNoon [  label = "isBeforeNoon", tooltip = "From initial to waitForNoon on isBeforeNoon" ] ;
  
  SurveyBase_state_survey6pm -> SurveyBase_state_waitForNoon [  tooltip = "From survey6pm to waitForNoon automatically" ] ;
  
  SurveyBase_state_initial -> SurveyBase_state_endSurveyProtocol [  label = "receivedEndProtocol", tooltip = "From initial to endSurveyProtocol on receivedEndProtocol" ] ;
  
  SurveyBase_state_waitFor6pm -> SurveyBase_state_endSurveyProtocol [  label = "receivedEndProtocol", tooltip = "From waitFor6pm to endSurveyProtocol on receivedEndProtocol" ] ;
  
  SurveyBase_state_waitForNoon -> SurveyBase_state_endSurveyProtocol [  label = "receivedEndProtocol", tooltip = "From waitForNoon to endSurveyProtocol on receivedEndProtocol" ] ;
  

}
