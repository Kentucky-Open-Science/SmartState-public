class SurveyBase {
  Integer deadlineNoon = 0;
  Integer deadline6pm = 0;

  state {
    initial {
      entry / {
        stateNotify("initial");
      };

      isBeforeNoon -> waitForNoon;
      isBefore6pm -> waitFor6pm;
      receivedEndProtocol -> endSurveyProtocol;
    }

    noonSurvey {
      entry / {
        stateNotify("noonSurvey");
      } -> waitFor6pm;

    }

     waitFor6pm {
      entry / {
        stateNotify("waitFor6pm");
      };

      after(deadline6pm) -> survey6pm;
      receivedEndProtocol -> endSurveyProtocol;

    }

    survey6pm {
      entry / {
        stateNotify("survey6pm");
      } -> waitForNoon;
    }

    waitForNoon {
      entry / {
        stateNotify("waitForNoon");
      };

      after(deadlineNoon) -> noonSurvey;
      receivedEndProtocol -> endSurveyProtocol;
    }

    endSurveyProtocol {
      entry / {
        stateNotify("endSurveyProtocol");
      };
    }

  }

  boolean stateNotify(String node) {return true;}
}